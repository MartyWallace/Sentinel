<?xml version="1.0" encoding="UTF-8"?><apiPackage id="sentinel.framework"><apiName>sentinel.framework</apiName><apiDetail/><apiClassifier id="sentinel.framework:Thing"><apiName>Thing</apiName><shortdesc>
	 The core object within Sentienl, a Thing is able to access all of the core game components.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>sentinel.framework:IDeconstructs</apiBaseInterface><apiBaseInterface>sentinel.framework:IStorable</apiBaseInterface><apiBaseClassifier>sentinel.framework.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The core object within Sentienl, a Thing is able to access all of the core game components.
	 Things are also able to be added to parent Things and contain their own children Things.
	 </apiDesc></apiClassifierDetail><apiOperation id="sentinel.framework:Thing:sentinel.framework:__addT"><apiName>__addT</apiName><shortdesc>
		 Internal alias for addT().</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier></apiReturn><apiParam><apiItemName>thing</apiItemName><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 Internal alias for <codeph>addT()</codeph>.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:sentinel.framework:__added"><apiName>__added</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:sentinel.framework:__removeT"><apiName>__removeT</apiName><shortdesc>
		 Internal alias for removeT().</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier></apiReturn><apiParam><apiItemName>thing</apiItemName><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier></apiParam><apiParam><apiItemName>destroy</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 Internal alias for <codeph>removeT()</codeph>.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:sentinel.framework:__removed"><apiName>__removed</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>from</apiItemName><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:sentinel.framework:__update"><apiName>__update</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:protected:addT"><apiName>addT</apiName><shortdesc>
		 Add a child Thing to this Thing.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>The Thing that was added.
		 </apiDesc><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier></apiReturn><apiParam><apiItemName>thing</apiItemName><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier><apiDesc>The Thing to add.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Add a child Thing to this Thing.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:protected:addedT"><apiName>addedT</apiName><shortdesc>
		 Called when this Thing is added to another Thing.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier><apiDesc>The Thing this Thing was added to.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when this Thing is added to another Thing.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:deconstruct"><apiName>deconstruct</apiName><shortdesc>
		 Deconstruct this Thing and its descendants.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Deconstruct this Thing and its descendants.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:getChildAt"><apiName>getChildAt</apiName><shortdesc>
		 Returns a child Thing at a given index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/><apiDesc>The index to check.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a child Thing at a given index.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:load"><apiName>load</apiName><shortdesc>
		 Loads some save data obtained via Thing.save() and attempt to apply it to
		 this Thing.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>sentinel.framework:Data</apiOperationClassifier><apiDesc>The data to load.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Loads some save data obtained via <codeph>Thing.save()</codeph> and attempt to apply it to
		 this Thing.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:removeAll"><apiName>removeAll</apiName><shortdesc>
		 Remove all children from this Thing.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>destroy</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Whether to also <codeph>deconstruct()</codeph> all removed Things.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove all children from this Thing.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:removeFromParent"><apiName>removeFromParent</apiName><shortdesc>
		 Remove this Thing from its parent, if it has one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>destroy</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Whether to also <codeph>deconstruct()</codeph> this Thing.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove this Thing from its parent, if it has one.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:protected:removeT"><apiName>removeT</apiName><shortdesc>
		 Remove a child Thing from this Thing.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>The Thing that was removed.
		 </apiDesc><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier></apiReturn><apiParam><apiItemName>thing</apiItemName><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier><apiDesc>The Thing to remove.
		 </apiDesc></apiParam><apiParam><apiItemName>destroy</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Whether to also <codeph>deconstruct()</codeph> the target Thing.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove a child Thing from this Thing.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:protected:removedT"><apiName>removedT</apiName><shortdesc>
		 Called when this Thing is removed from another Thing.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>from</apiItemName><apiOperationClassifier>sentinel.framework:Thing</apiOperationClassifier><apiDesc>The Thing this Thing was removed from.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when this Thing is removed from another Thing.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:save"><apiName>save</apiName><shortdesc>
		 Saves a simple representation of this Thing as an Object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework:Data</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Saves a simple representation of this Thing as an Object.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Thing:protected:update"><apiName>update</apiName><shortdesc>
		 Update this Thing and its descendants.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Update this Thing and its descendants.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="sentinel.framework:Thing:protected:audio:get"><apiName>audio</apiName><shortdesc>
		 A reference to the game Audio service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.sound:Audio</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the game Audio service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:protected:children:get"><apiName>children</apiName><shortdesc>
		 Returns the list of child Things.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Vector$sentinel.framework:Thing"/></apiValueDef><apiDesc>
		 Returns the list of child Things.
		 This is the <i>actual list</i> - be very careful what you do with it.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:className:get"><apiName>className</apiName><shortdesc>
		 The full class name of this Thing.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The full class name of this Thing.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:protected:game:get"><apiName>game</apiName><shortdesc>
		 A reference to the core Game class.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework:BaseGame</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the core Game class.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:id:get"><apiName>id</apiName><shortdesc>
		 A unique ID number assigned to this Thing by the core Game class.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
		 A unique ID number assigned to this Thing by the core Game class.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:protected:keyboard:get"><apiName>keyboard</apiName><shortdesc>
		 A reference to the game Keyboard service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.client:Keyboard</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the game Keyboard service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:protected:library:get"><apiName>library</apiName><shortdesc>
		 A reference to the game Library service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework:Library</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the game Library service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:protected:mouse:get"><apiName>mouse</apiName><shortdesc>
		 A reference to the game Mouse service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.client:Mouse</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the game Mouse service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:protected:parent:get"><apiName>parent</apiName><shortdesc>
		 The parent Thing, if this Thing has one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework:Thing</apiValueClassifier></apiValueDef><apiDesc>
		 The parent Thing, if this Thing has one.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:protected:storage:get"><apiName>storage</apiName><shortdesc>
		 A reference to the game Storage service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.client:Storage</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the game Storage service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Thing:protected:viewport:get"><apiName>viewport</apiName><shortdesc>
		 A reference to the game Viewport service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.graphics:Viewport</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the game Viewport service.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="sentinel.framework:Data"><apiName>Data</apiName><shortdesc>
	 Arbitrary data wrapped in helper methods.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Arbitrary data wrapped in helper methods.
	 </apiDesc></apiClassifierDetail><apiConstructor id="sentinel.framework:Data:Data"><apiName>Data</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>object</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Primitive Object to consume and use as the base for this Data object.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="sentinel.framework:Data:create"><apiName>create</apiName><shortdesc>
		 Creates a Data object from a primitive Object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiOperationClassifier>sentinel.framework:Data</apiOperationClassifier></apiReturn><apiParam><apiItemName>object</apiItemName><apiType value="Object"/><apiDesc>Target primitive Object.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a Data object from a primitive Object.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Data:del"><apiName>del</apiName><shortdesc>
		 Delete a field.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>The field to delete.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Delete a field.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Data:has"><apiName>has</apiName><shortdesc>
		 Returns true if the field is defined on this object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>The field to check for.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns true if the field is defined on this object.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Data:merge"><apiName>merge</apiName><shortdesc>
		 Merge this Data with another set of Data and return the combined result.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework:Data</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>The Data to be merged with.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Merge this Data with another set of Data and return the combined result.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Data:toJson"><apiName>toJson</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Data:get"><apiName>get</apiName><shortdesc>
		 Get a value.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>The name of the field to get the value of.
		 </apiDesc></apiParam><apiParam><apiItemName>fallback</apiItemName><apiType value="any"/><apiData>null</apiData><apiDesc>Fallback value to use if the field is undefined.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get a value.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Data:set"><apiName>set</apiName><shortdesc>
		 Set a value.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>field</apiItemName><apiType value="String"/><apiDesc>The field to set the value of.
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="any"/><apiDesc>The value to assign to the target field.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Set a value.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="sentinel.framework:Data:raw:get"><apiName>raw</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="sentinel.framework:Service"><apiName>Service</apiName><shortdesc>
	 Describes a service provided to an IServiceable.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>sentinel.framework.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Describes a service provided to an IServiceable.
	 </apiDesc></apiClassifierDetail><apiOperation id="sentinel.framework:Service:sentinel.framework:__construct"><apiName>__construct</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>serviceable</apiItemName><apiOperationClassifier>sentinel.framework:IServiceable</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Service:sentinel.framework:__update"><apiName>__update</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Service:protected:construct"><apiName>construct</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Service:protected:update"><apiName>update</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="sentinel.framework:Service:game:get"><apiName>game</apiName><shortdesc>
		 A reference to the core game object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework:BaseGame</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the core game object.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Service:name:get"><apiName>name</apiName><shortdesc>
		 Returns the name of this service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Returns the name of this service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:Service:protected:serviceable:get"><apiName>serviceable</apiName><shortdesc>
		 The object being serviced by this Service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework:IServiceable</apiValueClassifier></apiValueDef><apiDesc>
		 The object being serviced by this Service.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="sentinel.framework:State"><apiName>State</apiName><shortdesc>
	 A State is used to define a game state e.g.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>sentinel.framework:Thing</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A State is used to define a game state e.g. the main menu, settings screen, game over screen,
	 the gameplay itself, etc.
	 </apiDesc></apiClassifierDetail><apiConstructor id="sentinel.framework:State:State"><apiName>State</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="sentinel.framework:State:deconstruct"><apiName>deconstruct</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="sentinel.framework:State:protected:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="sentinel.framework:State:graphics:get"><apiName>graphics</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.graphics:IGraphicsContainer</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="sentinel.framework:IDeconstructs"><apiName>IDeconstructs</apiName><shortdesc>
	 A contract for an object defining a deconstructor - code used to aid in correct garbage
	 collection.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A contract for an object defining a deconstructor - code used to aid in correct garbage
	 collection.
	 </apiDesc></apiClassifierDetail><apiOperation id="sentinel.framework:IDeconstructs:sentinel.framework:IDeconstructs:deconstruct"><apiName>deconstruct</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="sentinel.framework:Library"><apiName>Library</apiName><shortdesc>
	 The Library manages game assets e.g.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>sentinel.framework:Service</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Library manages game assets e.g. textures, sprite sheets and sound.
	 </apiDesc></apiClassifierDetail><apiOperation id="sentinel.framework:Library:addSheet"><apiName>addSheet</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>sheet</apiItemName><apiOperationClassifier>sentinel.framework.graphics:Sheet</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Library:addSound"><apiName>addSound</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>sound</apiItemName><apiType value="flash.media:Sound"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Library:addTexture"><apiName>addTexture</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>texture</apiItemName><apiType value="starling.textures:Texture"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Library:getImageFromAtlas"><apiName>getImageFromAtlas</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework.graphics:Image</apiOperationClassifier></apiReturn><apiParam><apiItemName>sheetName</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>regionName</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Library:getImage"><apiName>getImage</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework.graphics:Image</apiOperationClassifier></apiReturn><apiParam><apiItemName>textureName</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Library:getSheet"><apiName>getSheet</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework.graphics:Sheet</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Library:getSound"><apiName>getSound</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework.sound:Sound</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Library:getTextureFromAtlas"><apiName>getTextureFromAtlas</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="starling.textures:Texture"/></apiReturn><apiParam><apiItemName>sheetName</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>regionName</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:Library:getTexture"><apiName>getTexture</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="starling.textures:Texture"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="sentinel.framework:Library:name:get"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="sentinel.framework:IServiceable"><apiName>IServiceable</apiName><shortdesc>
	 A contract defining an object that can be associated with one or more Services.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A contract defining an object that can be associated with one or more Services. Typically, a
	 ServiceManager will be used to manage that relationship.
	 </apiDesc></apiClassifierDetail><apiOperation id="sentinel.framework:IServiceable:sentinel.framework:IServiceable:getService"><apiName>getService</apiName><shortdesc>
		 Returns a Service that is servicing this object.</shortdesc><prolog><asCustoms><csharp>Improvement opportunity: public T GetService(string name) where T : new(), Service.
		 </csharp></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework:Service</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>The name of the Service, represented by its 'name' getter.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a Service that is servicing this object.
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="sentinel.framework:Core"><apiName>Core</apiName><shortdesc>
	 The Sentinel core, extended by your document class.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.display:Sprite</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Sentinel core, extended by your document class.
	 </apiDesc></apiClassifierDetail><apiConstructor id="sentinel.framework:Core:Core"><apiName>Core</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>main</apiItemName><apiType value="Class"/><apiDesc>Your main game class, extending <codeph>sentinel.framework.Game</codeph>.
		 </apiDesc></apiParam><apiParam><apiItemName>antiAliasing</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>The anti-aliasing level used in rendering Starling graphics. This
		 value should be between 0 and 16.
		 </apiDesc></apiParam><apiParam><apiItemName>debug</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Whether or not to show the Starling debug box.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="sentinel.framework:BaseGame"><apiName>BaseGame</apiName><shortdesc>
	 The core game class passed to the constructor of sentinel.framework.Core.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>sentinel.framework:IServiceable</apiBaseInterface><apiBaseClassifier>sentinel.framework.graphics:Sprite</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The core game class passed to the constructor of <codeph>sentinel.framework.Core</codeph>. This
	 is the base class for your main game class and should contain logic for initializing assets
	 and the starting state.
	 </apiDesc></apiClassifierDetail><apiOperation id="sentinel.framework:BaseGame:sentinel.framework:__construct"><apiName>__construct</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:BaseGame:sentinel.framework:__getNextId"><apiName>__getNextId</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="uint"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:BaseGame:protected:construct"><apiName>construct</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:BaseGame:protected:defineServices"><apiName>defineServices</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="Vector$sentinel.framework:Service"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:BaseGame:getInstance"><apiName>getInstance</apiName><shortdesc>
		 Returns a reference to the core game class.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiOperationClassifier>sentinel.framework:BaseGame</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Returns a reference to the core game class.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:BaseGame:getService"><apiName>getService</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework:Service</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:BaseGame:loadState"><apiName>loadState</apiName><shortdesc>
		 Loads a new State.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>state</apiItemName><apiOperationClassifier>sentinel.framework:State</apiOperationClassifier><apiDesc>The new State to load.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Loads a new State. Unloads the current state, if one is set.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:BaseGame:protected:update"><apiName>update</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="sentinel.framework:BaseGame:audio:get"><apiName>audio</apiName><shortdesc>
		 Reference to the Audio service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.sound:Audio</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the Audio service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:BaseGame:identity:get"><apiName>identity</apiName><shortdesc>
		 The game identity string.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The game identity string.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:BaseGame:keyboard:get"><apiName>keyboard</apiName><shortdesc>
		 Reference to the Keyboard service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.client:Keyboard</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the Keyboard service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:BaseGame:library:get"><apiName>library</apiName><shortdesc>
		 Reference to the Library service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework:Library</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the Library service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:BaseGame:mouse:get"><apiName>mouse</apiName><shortdesc>
		 Reference to the Mouse service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.client:Mouse</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the Mouse service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:BaseGame:starling:get"><apiName>starling</apiName><shortdesc>
		 Reference to the current Starling instance.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="starling.core:Starling"/></apiValueDef><apiDesc>
		 Reference to the current Starling instance.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:BaseGame:state:get"><apiName>state</apiName><shortdesc>
		 Reference to the current active State.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework:State</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the current active State.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:BaseGame:storage:get"><apiName>storage</apiName><shortdesc>
		 Reference to the Storage service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.client:Storage</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the Storage service.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="sentinel.framework:BaseGame:viewport:get"><apiName>viewport</apiName><shortdesc>
		 Reference to the Viewport service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.graphics:Viewport</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the Viewport service.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="sentinel.framework:IStorable"><apiName>IStorable</apiName><shortdesc>
	 An object that can be saved as an object and loaded from an object.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 An object that can be saved as an object and loaded from an object.
	 </apiDesc></apiClassifierDetail><apiOperation id="sentinel.framework:IStorable:sentinel.framework:IStorable:load"><apiName>load</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>sentinel.framework:Data</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:IStorable:sentinel.framework:IStorable:save"><apiName>save</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework:Data</apiOperationClassifier></apiReturn></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="sentinel.framework:IMouseDataProvider"><apiName>IMouseDataProvider</apiName><shortdesc>
	 An object that is able to provide data based on the state of the user's mouse.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 An object that is able to provide data based on the state of the user's mouse.
	 </apiDesc></apiClassifierDetail><apiValue id="sentinel.framework:IMouseDataProvider:sentinel.framework:IMouseDataProvider:mouseContainer:get"><apiName>mouseContainer</apiName><shortdesc>
		 Returns the graphics object used as the 'container' for the mouse.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>sentinel.framework.graphics:IGraphics</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the graphics object used as the 'container' for the mouse.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="sentinel.framework:ServiceManager"><apiName>ServiceManager</apiName><shortdesc>
	 Manages the relationship between a collection of Services and an IServiceable.</shortdesc><prolog><author>Marty Wallace.
	 </author><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>sentinel.framework:IDeconstructs</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Manages the relationship between a collection of Services and an IServiceable.
	 </apiDesc></apiClassifierDetail><apiConstructor id="sentinel.framework:ServiceManager:ServiceManager"><apiName>ServiceManager</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>serviceable</apiItemName><apiOperationClassifier>sentinel.framework:IServiceable</apiOperationClassifier><apiDesc>The object to be serviced.
		 </apiDesc></apiParam><apiParam><apiItemName>services</apiItemName><apiType value="Vector$sentinel.framework:Service"/></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="sentinel.framework:ServiceManager:deconstruct"><apiName>deconstruct</apiName><shortdesc>
		 Deconstruct this ServiceManager and all of the Services it manages.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Deconstruct this ServiceManager and all of the Services it manages.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:ServiceManager:getService"><apiName>getService</apiName><shortdesc>
		 Gets a Service with the specified name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>sentinel.framework:Service</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>The name of the Service to search for.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gets a Service with the specified name.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="sentinel.framework:ServiceManager:update"><apiName>update</apiName><shortdesc>
		 Updates all of the Services managed by this.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Updates all of the Services managed by this.
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage>